# These need to be looked over again.
NGame = {
	MAX_NUMBER_OF_AUTOSAVES = 10 # 5 					# The game will only keep the MAX_NUMBER_OF_AUTOSAVES latest autosaves.
}

NEconomy = {
	MIN_CONSTRUCTION_EFFICIENCY = 0.01 # 0.05					# Construction efficiency cannot go below this amount
	POLLUTION_TARGET_DIVISOR_BASE = 2 # 1				# Base value to divide total pollution generation by for calculating state region pollution target level
	GOODS_LEADERBOARD_SIZE = 25 # 10					# How many spots there are on each goods leaderboard
	BUY_SELL_DIFF_AT_MAX_FACTOR = 3	# 2					# the difference between buy/consumption and sell/production at min/max pricing, e.g. if set to 4 then if buy orders are 4x sell orders price is maxed
	TRADE_ROUTE_BUREAUCRACY_COST = 5 # 10 # 20				# The cost in BUR per trade route
	URBANIZATION_PER_BUILDING = 50 # 100
	GOVERNMENT_DIVIDENDS_EFFICIENCY_MIN = 0.99 # 0.2		# Minimum dividend fraction from buildings with government shares that will reach the treasury - the rest will be wasted
}

NPops = {
	ASSIMILATION_RATE = 0.02 # 0.002
	MIN_ASSIMILATION = 1 # 10
	CONVERSION_RATE = 0.01 # 0.002
	MIN_CONVERSION = 1 # 10
	
	DISCRIMINATION_BASE = 50 # 33
	
	MIGRATION_PULL_MULT_FROM_NO_DISCRIMINATION = 2.0 # 1.0		# Migration pull multiplier increased by this if pop is moving from discrimination to no discrimination (not applied to mass migration targets)
	MIGRATION_PULL_MULT_FROM_HOMELANDS = 1.0 # 0.5				# Migration pull multiplier increased by this if pop is moving to cultural homelands (not applied to mass migration targets)
	MIGRATION_PULL_REDUCTION_FROM_UNEMPLOYMENT_MAX = 10 # 50		# Migration pull reduction from unemployment cannot exceed this

	# General factors for how many pops will migrate
	MIGRATION_PULL_HIGH_THRESHOLD = 1.05 # 1.25						#	State must have a migration pull of at least market average * this to get economic immigration
	MIGRATION_PULL_LOW_THRESHOLD = 0.95	 # 0.75						# State must have a migration pull of less or equal than market average * this to get full amount of emigration
	ECONOMIC_MIGRATION_STATE_POPULATION_THRESHOLD = 100000		
	CULTURAL_MIGRATION_FROM_RADICALS = 0.15	# 0.05				# At 100% radicals, this fraction of the pop wants to mass migrate
	MIGRATION_MAX_PER_STATE_INFRASTRUCTURE = 3	# 2				# No more than this amount of people can move from or to a state in a single week (scales with infrastructure)
	MIGRATION_MAX_EMIGRATION_AS_POPULATION_FRACTION = 0.005 # 0.0005		# Max emigration per week is clamped to this fraction of a state's population
	MIGRATION_MAX_PER_STATE_UNEMPLOYMENT_ORIGIN_FRACTION = 0.05 # 0.005	# The amount of unemployed workers in a state * this value is added to how many people can move from it (after clamping from MIGRATION_MAX_EMIGRATION_AS_POPULATION_FRACTION)
	MIGRATION_MAX_PER_STATE_UNEMPLOYMENT_TARGET_FRACTION = 0.05	# 0.05 # The amount of unemployed workers in a state * this value is removed from how many people can move to it (after clamping from MIGRATION_MAX_EMIGRATION_AS_POPULATION_FRACTION)
	MIGRATION_MAX_PER_STATE_CULTURAL_EMIGRATION_MULT = 4.0	# 3.0	# Weekly emigration caps are multiplied by this amount by this for cultural-type migration (after clamping from MIGRATION_MAX_EMIGRATION_AS_POPULATION_FRACTION)
	MIGRATION_MAX_PER_STATE_CULTURAL_IMMIGRATION_MULT = 12.0 # 8.0	# Weekly immigration caps are multiplied by this amount by this for cultural-type migration (after clamping from MIGRATION_MAX_EMIGRATION_AS_POPULATION_FRACTION)
	MASS_MIGRATION_TARGET_MAX_TURMOIL = 0.19 # No idea what this is, vanilla error?
	# Factors for creating mass migration targets
	MASS_MIGRATION_ORIGIN_MIN_TURMOIL = 0.2	# 0.25		# Must have at least this much turmoil in cultural homelands to create a migration target
	MASS_MIGRATION_ORIGIN_MIN_EMIGRANTS = 2500	# 100000	# A country must have at least this many possible migrants to trigger a mass migration
	MASS_MIGRATION_SPAWN_CHANCE = 0.75 # 0.5					# Per week for each potential mass migration, scales with turmoil (1 = 1%)
	MASS_MIGRATION_SPAWN_CHANCE_STRUGGLING_FACTOR = 0.25 # 0.1 # Chance increases by this for each point of SoL below 10 for a culture in a country
	MASS_MIGRATION_SPAWN_CHANCE_STARVING_FACTOR = 0.6 # 0.5	# Chance increases by this for each point of SoL below 5 for a culture in a country (added on top of struggling factor)
	MASS_MIGRATION_TARGET_COUNTRY_RANDOM_FACTOR = 0.6 # 0.5	# The higher this is, the more random the selection of mass migration country targets will be
	MASS_MIGRATION_TARGET_STATE_RANDOM_FACTOR = 0.5	# 0.5	# The higher this is, the more random the selection of mass migration state targets in the target country will be
	MASS_MIGRATION_DURATION_MONTHS = 24	# 12				# How long does a mass migration last in months
	MASS_MIGRATION_COOLDOWN_MONTHS = 30	# 60				# How many months before the same culture can mass migrate from a country again
	MASS_MIGRATION_NUM_TARGET_STATES_FOR_NO_PENALTY = 1
}

### Pop Growth Constants
@min_birthrate = 0.0015
@max_birthrate = 0.0040
@min_mortality = 0.0010
@max_mortality = 0.0070
@pop_growth_sol_equilibrium = 5							# Equilibrium is where (with no birthrate/death-rate mods) growth is stagnant
@pop_growth_sol_delta_cap = 20							# SoL Delta Cap is where net growth stops increasing with rising SoL, i.e. both drop at the same pace
@pop_growth_sol_cap = 40								# SoL Cap is where they birthrate/death-rate stop dropping

@mortality_at_equilibrium = @[max_birthrate-(pop_growth_sol_equilibrium*(max_birthrate-min_birthrate)/pop_growth_sol_cap)]
@birthrate_at_delta_cap = @[max_birthrate-(pop_growth_sol_delta_cap*(max_birthrate-min_birthrate)/pop_growth_sol_cap)]@improving_slope = @[(birthrate_at_delta_cap-min_birthrate+min_mortality-mortality_at_equilibrium)/(pop_growth_sol_delta_cap-pop_growth_sol_equilibrium)]
@improving_intercept = @[-1*improving_slope*pop_growth_sol_equilibrium+mortality_at_equilibrium]
@mortality_at_delta_cap = @[improving_slope*pop_growth_sol_delta_cap+improving_intercept]
@fixed_delta_slope = @[(min_mortality-mortality_at_delta_cap)/(pop_growth_sol_cap-pop_growth_sol_delta_cap)]

NPops = {
	POP_GROWTH_BIRTHRATE_REDUCTION_PER_SOL = @[(max_birthrate-min_birthrate)/pop_growth_sol_cap]
	POP_GROWTH_MORTALITY_AT_EQUILIBRIUM = @mortality_at_equilibrium
	POP_GROWTH_STARVING_SLOPE = @[(mortality_at_equilibrium-max_mortality)/pop_growth_sol_equilibrium]
	POP_GROWTH_BIRTHRATE_AT_DELTA_CAP = @birthrate_at_delta_cap
	POP_GROWTH_IMPROVING_SLOPE = @improving_slope
	POP_GROWTH_IMPROVING_INTERCEPT = @improving_intercept
	POP_GROWTH_FIXED_DELTA_SLOPE = @fixed_delta_slope
	POP_GROWTH_FIXED_DELTA_INTERCEPT = @[-1*fixed_delta_slope*pop_growth_sol_cap+min_mortality]
	
	POP_GROWTH_MIN_BIRTHRATE = @min_birthrate					# Minimum base birthrate per month (at SOL_POP_GROWTH_CAP)
	POP_GROWTH_MAX_BIRTHRATE = @max_birthrate					# Maximum base birthrate per month (at SOL = 0)
	POP_GROWTH_MIN_MORTALITY = @min_mortality					# Maximum base mortality per month (at SOL_POP_GROWTH_CAP)
	POP_GROWTH_MAX_MORTALITY = @max_mortality					# Maximum base mortality per month (at SOL = 0)
	POP_GROWTH_SOL_DELTA_CAP = @pop_growth_sol_delta_cap		# Birthrate and Mortality retains its delta beyond this SoL
	POP_GROWTH_SOL_CAP = @pop_growth_sol_cap					# Birthrate and Mortality reaches its minimum values and does not drop beyond this SoL
	POP_GROWTH_SOL_EQUILIBRIUM = @pop_growth_sol_equilibrium	# The Standard of Living where Birthrate and Mortality correspond, after which Mortality diminishes slower
}
### End Pop Growth Constant defines